// Styled layout
import "@/app/globals.css";
import { Geist, Geist_Mono } from "next/font/google";

// Metadata for SEO
import type { Metadata } from "next";

// Locale layout for Next.js with next-intl
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import AuthProvider from "@/providers/authProvider";

import { Toaster } from "@/components/ui/sonner";
import Nav from "@/components/shared/layout/nav/nav";

// Importing fonts
const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata for the application
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html
      lang={locale}
      dir={locale === "ar" ? "rtl" : "ltr"}
      className={`${geistSans.variable} ${geistMono.variable} dark`}
    >
      <body>
        <NextIntlClientProvider>
          <Nav />
          <AuthProvider>
            <main
              className="mt-[100px] py-[120px] space-y-[120px] overflow-hidden dark:!text-cyan-50 !text-cyan-950"
              style={{ minHeight: "calc(100vh - 100px)" }}
            >
              {children}
              <Toaster />
            </main>
          </AuthProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
